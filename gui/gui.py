import sys
import os
import tkintermapview

# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from pathlib import Path
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, font, filedialog, Toplevel
import tkinter

# Util imports
# Get name of current directory
# Get name of parent directory
# Add the parent directory to the sys.path
current = os.path.dirname(os.path.realpath(__file__))
parent = os.path.dirname(current)
sys.path.append(parent)

import utils.constant as constant
import utils.latlong as ll
import utils.processor as processor

# Button text
buttonText1 = "Upload"
buttonText2 = "button2"
buttonText3 = "button3"
buttonText4 = "button4"
buttonText5 = "button5"

# GLOBAL VAR
global originCoord, destCoord, coinAmount, coinsDisplay, activity, exp
coinAmount = 0
exp = 0

# Functions
def updateText(obj, text):
    obj.config(state="normal")
    obj.delete(1.0, tkinter.END)
    obj.insert(tkinter.END, str(text))
    obj.config(state="disabled")

def closeWindow(popupWindow):
    global originCoord, destCoord, coinAmount, activity, exp
    print(originCoord, destCoord)
    distance = ll.getDistance(
        originCoord["lat"],
        destCoord["lat"],
        originCoord["long"],
        destCoord["long"]
    )
    coinAmount += float(distance) * float(constant.COINS_PER_KM)

    dtime = {}
    if(destCoord["time"]["second"] >= originCoord["time"]["second"]):
        dtime["second"] = destCoord["time"]["second"] - originCoord["time"]["second"]
    else:
        dtime["second"] = destCoord["time"]["second"] - originCoord["time"]["second"] + 60
        destCoord["time"]["minute"] -= 1

    if(destCoord["time"]["minute"] >= originCoord["time"]["minute"]):
        dtime["minute"] = destCoord["time"]["minute"] - originCoord["time"]["minute"]
    else:
        dtime["minute"] = destCoord["time"]["minute"] - originCoord["time"]["minute"] + 60
        destCoord["time"]["hour"] -= 1

    if(destCoord["time"]["hour"] >= originCoord["time"]["hour"]):
        dtime["hour"] = destCoord["time"]["hour"] - originCoord["time"]["hour"]
    else:
        dtime["hour"] = 00

    time_string = "{}:{}:{}".format(dtime["hour"], dtime["minute"], dtime["second"])

    avgSpeed = distance / (dtime["hour"] + dtime["minute"]/60 + dtime["second"]/3600)

    updateText(coinsDisplay, f"${coinAmount:.2f}")
    updateText(text_2, f"Distance: {distance:.2f} km")
    updateText(text_3, f"Time spent: {time_string}")
    updateText(text_4, f"Average speed: {avgSpeed:2.2f} km/h")

    min = 895
    max = 1235
    diff = 1235 - 895

    if(avgSpeed <= 5):
        activity = "Walking"
        exp += constant.XP_WALK * distance
    elif(avgSpeed >= 30):
        activity = "Driving"
        exp += constant.XP_DRIVE * distance
    else:
        activity = "Biking"
        exp += constant.XP_BIKE * distance

    newPos = exp/100 * diff + min
    canvas.coords(xp, 895, 245, newPos, 285)

    print(f"distance: {distance}")
    print(f"coin amount: {coinAmount}")
    print(originCoord["time"])
    print(destCoord["time"])
    popupWindow.destroy()

def select_file(origin):
    global originCoord, destCoord, coinAmount

    filetypes = (
        ('image files', '*.jpg'),
        ('All files', '*.*')
    )

    filename = filedialog.askopenfilename(
        title='Open a file',
        initialdir='/',
        filetypes=filetypes)

    if(origin):
        originPath = filename
        originCoord = processor.processImage(originPath)
        map_widget.set_position(originCoord["lat"], originCoord["long"])
        map_widget.set_zoom(15)
        markerOrigin = map_widget.set_marker(originCoord["lat"], originCoord["long"], text="Origin")
    else:
        destPath = filename
        destCoord = processor.processImage(destPath)
        map_widget.set_position(destCoord["lat"], destCoord["long"])
        map_widget.set_zoom(15)
        markerDest = map_widget.set_marker(destCoord["lat"], destCoord["long"], text="Destination")

def popupUpload():
    popupWindow = Toplevel(bg=constant.SIDEBAR_GREEN)
    popupWindow.title("Upload")
    popupWindow.geometry("400x400")
    popupWindow.attributes('-topmost', 'true')

    buttonOrigin = PhotoImage(
        file=relative_to_assets("button_1.png"))
    buttonOrigin = Button(
        popupWindow,
        text="Origin",
        image=button_image_1,
        compound="center",
        command=lambda: select_file(origin=True)
    )
    buttonOrigin.pack()
    buttonOrigin.place(
        x=100,
        y=75,
        width=200,
        height=50
    )

    buttonDestination = PhotoImage(
        file=relative_to_assets("button_1.png"))
    buttonDestination = Button(
        popupWindow,
        text="Destination",
        image=button_image_1,
        compound="center",
        command=lambda: select_file(origin=False)
    )
    buttonDestination.pack()
    buttonDestination.place(
        x=100,
        y=200,
        width=200,
        height=50
    )

    buttonDone = PhotoImage(
        file=relative_to_assets("button_1.png"))
    buttonDone = Button(
        popupWindow,
        text="Done",
        image=button_image_1,
        compound="center",
        command=lambda: closeWindow(popupWindow)
    )
    buttonDone.pack()
    buttonDone.place(
        x=125,
        y=300,
        width=150,
        height=30
    )

    popupWindow.mainloop()

# Path
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = os.path.join(OUTPUT_PATH, Path("../resources"))

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

window = Tk()
window.geometry("1512x982")
window.configure(bg="#FFFFFF")

# Constants
BUTTON_FONT = font.Font(family="inter", size=18)
NAME_FONT = font.Font(family="inter", size=18)
TITLE_FONT = font.Font(family="inter", size=18)

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 982,
    width = 1512,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    416.6158142089844,
    2.2737367544323206e-13,
    423.8770751953125,
    981.9731445312502,
    fill="#FFFFFF",
    outline="")

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    text=buttonText1,
    image=button_image_1,
    compound="center",
    borderwidth=0,
    highlightthickness=0,
    command=popupUpload,
    relief="flat"
)
button_1.place(
    x=60,
    y=240,
    width=295.0,
    height=70.0
)

canvas.create_rectangle(
    20,
    20,
    400,
    950,
    fill=constant.SIDEBAR_GREEN,
    outline="")

canvas.create_rectangle(
    60,
    390,
    355,
    650,
    fill="#B0B0B0",
    outline="")

canvas.create_rectangle(
    61,
    391,
    354,
    649,
    fill="#FFFFFF",
    outline="")

text_1 = Text(
    bd=0,
    bg="#FFFFFF",
    highlightthickness=0
)
text_1.pack()
text_1.insert("1.0", "Your Journey")
text_1.configure(font=("inter", 24, "bold"))
text_1.configure(state="disabled")
text_1.place(
    x=75,
    y=410,
    width=250,
    height=40
)

text_2 = Text(
    bd=0,
    bg="#FFFFFF",
    highlightthickness=0
)
text_2.pack()
text_2.insert("1.0", "Distance: N/A")
text_2.configure(font=("inter", 16))
text_2.configure(state="disabled")
text_2.place(
    x=75,
    y=465,
    width=250,
    height=40
)

text_3 = Text(
    bd=0,
    bg="#FFFFFF",
    highlightthickness=0
)
text_3.pack()
text_3.insert("1.0", "Time spent: N/A")
text_3.configure(font=("inter", 16))
text_3.configure(state="disabled")
text_3.place(
    x=75,
    y=515,
    width=250,
    height=40
)

text_4 = Text(
    bd=0,
    bg="#FFFFFF",
    highlightthickness=0
)
text_4.pack()
text_4.insert("1.0", "Average speed: N/A")
text_4.configure(font=("inter", 16))
text_4.configure(state="disabled")
text_4.place(
    x=75,
    y=565,
    width=250,
    height=40
)

# Button fonts
button_1['font'] = BUTTON_FONT

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    256.0,
    133.00000000000023,
    image=entry_image_1
)
"""
entry_1 = Text(
    bd=0,
    bg="#EEEEEE",
    highlightthickness=0
)
entry_1.place(
    x=156.0,
    y=103.00000000000023,
    width=200.0,
    height=58.0
)
"""
"""
entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    1025.0,
    120.00000000000023,
    image=entry_image_2
)
"""
entry_2 = Text(
    bd=0,
    bg="#FFFFFF",
    highlightthickness=0
)
entry_2.pack()
entry_2.insert("1.0", "Xiao Zhang")
entry_2.configure(font=("inter", 36, "bold"))
entry_2.configure(state="disabled")
entry_2.place(
    x=825,
    y=90,
    width=400,
    height=60
)

image_image_1 = PhotoImage(
    file=relative_to_assets("logo.png"))
image_1 = canvas.create_image(
    107,
    127,
    image=image_image_1
)

# avatar
image_image_2 = PhotoImage(
    file=relative_to_assets("avatar.png"))
image_2 = canvas.create_image(
    646.574462890625,
    202,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("XP.png"))
image_3 = canvas.create_image(
    849.800537109375,
    267,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("coin.png"))
image_4 = canvas.create_image(
    849.800537109375,
    195,
    image=image_image_4
)

map_widget = tkintermapview.TkinterMapView(
    window,
    width=850,
    height=500,
    corner_radius=0)
map_widget.place(x=534.574462890625, y=390)

canvas.create_rectangle(
    530,
    385,
    1390,
    895,
    fill="#B0B0B0",
    outline="")

# Coin Bar
#   Bank amount
coinsDisplay = Text(
    bd=0,
    bg="#FFFFFF",
    highlightthickness=0
)
coinsDisplay.pack()
coinsDisplay.insert("1.0", "${}".format(coinAmount))
coinsDisplay.configure(font=("inter", 26, "bold"))
coinsDisplay.configure(state="disabled")
coinsDisplay.tag_configure("center", justify='center')
coinsDisplay.place(
    x=1035,
    y=175,
    width=100,
    height=40
)

#   Background
canvas.create_rectangle(
    #950,
    890,
    170,
    1240,
    220,
    fill=constant.GRAY,
    outline="")
#   Health
canvas.create_rectangle(
    #955,
    895,
    175,
    1235,
    215,
    fill=constant.WHITE,
    outline="")

# XP Bar
#   Background
canvas.create_rectangle(
    890,
    240,
    1240,
    290,
    fill=constant.GRAY,
    outline="")
#   XP
xp = canvas.create_rectangle(
    895,
    245,
    895,
    #1235, start at 0 instead
    285,
    fill=constant.YELLOW,
    outline="")

window.resizable(False, False)
window.mainloop()
